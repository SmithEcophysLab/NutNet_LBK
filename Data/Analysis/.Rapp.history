plots = seq(1, 42, 1)#
diversity_data = NA#
comp_18_plants = subset(comp_18, Code != 'BARE' & Code != 'LITT')#
#
for (i in 1:length(plots)){#
	tmp_cover = (subset(comp_18_plants, Plot == i)$Percent.Cover) / 100#
	tmp_diversity = diversity(tmp_cover)#
	plot = i#
	diversity_data = rbind(c(plot, tmp_diversity), diversity_data)#
}
diversity_data
diversity_data = NULL
diversity_data
for (i in 1:length(plots)){#
	tmp_cover = (subset(comp_18_plants, Plot == i)$Percent.Cover) / 100#
	tmp_diversity = diversity(tmp_cover)#
	plot = i#
	diversity_data = rbind(c(plot, tmp_diversity), diversity_data)#
}
diversity_data
subset(comp_18, Plot == 7)
subset(comp_18, Plot == 15)
?richness
tmp_diversity = diversity(tmp_cover, index = 'simpsons')
plots = seq(1, 42, 1)#
diversity_data = NULL#
comp_18_plants = subset(comp_18, Code != 'BARE' & Code != 'LITT')#
#
for (i in 1:length(plots)){#
	tmp_cover = (subset(comp_18_plants, Plot == i)$Percent.Cover) / 100#
	tmp_diversity = diversity(tmp_cover, index = 'simpson')#
	plot = i#
	diversity_data = rbind(c(plot, tmp_diversity), diversity_data)#
}
diversity_data
hist(diversity_data)
diversity_df = as.data.frame(dicersity_data)
diversity_df = as.data.frame(diversity_data)
diversity_df
colnames(diversity_df) = c('Plot', 'D')
hist(diversity_data$D)
hist(diversity_df$D)
head(light)
plots = seq(1, 42, 1)
light_avail = NULL
subset(light_18, Plot == i & Position == 'In')
out_mean = subset(light_18, Plot == i & Position == 'Out')$Light
in_mean = mean(subset(light_18, Plot == i & Position == 'In')$Light)
light_avail_data = NULL
light_avail_data = rbind(c(plot, avail), light_avail_data)
in_mean = mean(subset(light_18, Plot == i & Position == 'In')$Light)#
	out_mean = subset(light_18, Plot == i & Position == 'Out')$Light#
	avail = in_mean / out_mean#
	plot = i#
	light_avail_data = rbind(c(plot, avail), light_avail_data)
light_avail_data
plots = seq(1, 42, 1)#
light_avail_data = NULL#
for (i in 1:length(plots)){#
	in_mean = mean(subset(light_18, Plot == i & Position == 'In')$Light)#
	out_mean = subset(light_18, Plot == i & Position == 'Out')$Light#
	avail = in_mean / out_mean#
	plot = i#
	light_avail_data = rbind(c(plot, avail), light_avail_data)#
}
light_avail_df = as.data.frame(light_avail_data)
colnames(light_avail_df) = c('Plot', 'Light_avail')
light_avail_df
head(biomass)
libary(dplyr)
library(dplyr)
biomass_group_by_plot = group_by(Biomass, Plot)
biomass_group_by_plot = group_by(biomass, Plot)
head(biomass)
biomass_group_by_plot = group_by(biomass, plot)
biomass = read.csv('../Biomass/Biomass.csv')
biomass_18 = subset(biomass, Year == 2018 & Month == 9)
biomass_group_by_plot = group_by(biomass_18, Plot)
biomass_total = summarise(biomass_group_by_plot, weight_sum = sum(weight))
biomass_total
biomass_plants = subset(biomass_18, pft != 'dead')
biomass_group_by_plot = group_by(biomass_18_plants, Plot)
biomass_18_plants = subset(biomass_18, pft != 'dead')
biomass_group_by_plot = group_by(biomass_18_plants, Plot)
biomass_total = summarise(biomass_group_by_plot, weight_sum = sum(weight))
diversity_light = left_join(diversity_df, light_avail_df)
diversity_light
diversity_light = left_join(diversity_df, light_avail_df, biomass_total)
diversity_light = left_join(diversity_df, light_avail_df)
diversity_light_biomass = left_join(diversity_light, biomass_total)
?prcomp
?princomp
USArrests
diversity_light_biomass_sort = sort(diversity_light_biomass, Plot)
?sort
?order
diversity_light_biomass_arrange = arrange(diversity_light_biomass, Plot)
diversity_light_biomass_arrange
dlb_arrange = arrange(diversity_light_biomass, Plot)
dlb_matrix = as.matrix(dlb_arrange[,3:5])
dlb_matrix = as.matrix(dlb_arrange[,c(3:5)])
dlb_arrange[,c(3:5)]
dlb_arrange = arrange(diversity_light_biomass, Plot)
dlb_matrix = as.matrix(dlb_arrange[,c(3:5)])
dlb_arrange
dlb_arrange[1,1]
dlb_arrange[1,2]
dlb_arrange[1,c(1:2)]
dlb_matrix = as.matrix(dlb_arrange[,c(2:4)])
dlb_matrix
dlb_matrix = as.matrix(dlb_arrange[,c(2:4)], row.names = dlb_arrange$Plot)
dlb_matrix
dlb_matrix = as.matrix(dlb_arrange[,c(2:4)], row.names = seq(1, 42, 1))
dlb_matrix
?as.matrix
dlb_matrix = as.matrix(dlb_arrange[,c(2:4)], dimnames = seq(1, 42, 1))
dlb_matrix
dlb_matrix = as.matrix(dlb_arrange[,c(2:4)], dimnames = as.character(seq(1, 42, 1)))
dlb_matrix
dlb_matrix = as.matrix(dlb_arrange[,c(2:4)])
dlb_matrix
k_dlb = kmeans(dlb_matrix, centers = 2, nstart = 25)
k_dlb
fviz_cluster(k_dlb, data = dlb_matrix)
library(tidyverse)  # data manipulation#
library(cluster)    # clustering algorithms#
library(factoextra) # clustering algorithms & visualization
install.packages('tidyverse')
install.packages('factoextra')
library(vegan)#
# library(dplyr)#
library(tidyverse)  # data manipulation#
library(cluster)    # clustering algorithms#
library(factoextra) # clustering algorithms & visualization
fviz_cluster(k_dlb, data = dlb_matrix)
dlb_matrix[c(1:14),]
k_dlb_block1 = kmeans(dlb_matrix[c(1:14),], centers = 2, nstart = 25)
k_dlb_block1
fviz_cluster(k_dlb_block1, data = dlb_matrix)
k_dlb_block1 = kmeans(dlb_matrix[c(1:14),], centers = 5, nstart = 25)#
#
fviz_cluster(k_dlb_block1, data = dlb_matrix) # all pretty similar except for maybe plot 1
k_dlb_block1
k_dlb_block1 = kmeans(dlb_matrix[c(1:14),], centers = 3, nstart = 25)
k_dlb_block1
fviz_cluster(k_dlb_block1, data = dlb_matrix) # all pretty similar except for maybe plot 1
k_dlb_block2 = kmeans(dlb_matrix[c(15:28),], centers = 3, nstart = 25)
k_dlb_block2
fviz_cluster(k_dlb_block2, data = dlb_matrix) # all pretty similar except for maybe plot 1
fviz_cluster(k_dlb_block2, data = dlb_matrix[c(15:28),]) # all pretty similar except for maybe plot 1
k_dlb_block1 = kmeans(dlb_matrix[c(1:14),], centers = 3, nstart = 25)#
fviz_cluster(k_dlb_block1, data = dlb_matrix[c(1:14),]) # all pretty similar except for maybe plot 1
k_dlb_block1 = kmeans(dlb_matrix[c(1:14),], centers = 2, nstart = 25)#
fviz_cluster(k_dlb_block1, data = dlb_matrix[c(1:14),]) # all pretty similar except for maybe plot 1
set.seed(123)
wss <- function(k) {#
  kmeans(df, k, nstart = 10 )$tot.withinss#
}
k.values <- 1:15
wss_values <- map_dbl(k.values, wss)
wss
k.values
map_dbl(k.values, wss)
?map_dbl
set.seed(123)#
#
# function to compute total within-cluster sum of square #
wss <- function(k) {#
  kmeans(dlb_matrix, k, nstart = 10 )$tot.withinss#
}#
#
# Compute and plot wss for k = 1 to k = 15#
k.values <- 1:15#
#
# extract wss for 2-15 clusters#
wss_values <- map_dbl(k.values, wss)
plot(k.values, wss_values,#
       type="b", pch = 19, frame = FALSE, #
       xlab="Number of clusters K",#
       ylab="Total within-clusters sum of squares")
fviz_nbclust(dlb_matrix[c(1:14),], kmeans, method = "wss")
fviz_nbclust(dlb_matrix[c(1:14),], kmeans, method = "wss")#
k_dlb_block1 = kmeans(dlb_matrix[c(1:14),], centers = 3, nstart = 25)#
fviz_cluster(k_dlb_block1, data = dlb_matrix[c(1:14),]) # all pretty similar except for maybe plot 1
fviz_nbclust(dlb_matrix[c(15:28),], kmeans, method = "wss")
k_dlb_block2 = kmeans(dlb_matrix[c(15:28),], centers = 4, nstart = 25)
fviz_cluster(k_dlb_block2, data = dlb_matrix[c(15:28),]) # all pretty similar except for maybe plot 1
k_dlb_block2
rownames(dlb_matrix)
rownames(dlb_matrix) = seq(1, 42, 1)
rownames(dlb_matrix)
dlb_matrix
dlb_arrange = arrange(diversity_light_biomass, Plot)#
dlb_matrix = as.matrix(dlb_arrange[,c(2:4)])#
rownames(dlb_matrix) = seq(1, 42, 1)#
#
fviz_nbclust(dlb_matrix[c(1:14),], kmeans, method = "wss")
k_dlb_block1 = kmeans(dlb_matrix[c(1:14),], centers = 3, nstart = 25)
fviz_cluster(k_dlb_block1, data = dlb_matrix[c(1:14),]) # all pretty similar except for maybe plot 1
fviz_nbclust(dlb_matrix[c(15:28),], kmeans, method = "wss")
k_dlb_block2 = kmeans(dlb_matrix[c(15:28),], centers = 4, nstart = 25)
fviz_cluster(k_dlb_block2, data = dlb_matrix[c(15:28),]) # all pretty similar except for maybe plot 1
k_dlb_block2
k_dlb_block2$iter
k_dlb_block2$size
k_dlb_block2$ifault
?kmeans
fviz_nbclust(dlb_matrix[c(29:42),], kmeans, method = "wss") # 4#
k_dlb_block2 = kmeans(dlb_matrix[c(29:42),], centers = 4, nstart = 25)#
fviz_cluster(k_dlb_block2, data = dlb_matrix[c(29:42),]) # all pretty similar except for maybe plot 1
fviz_nbclust(dlb_matrix[c(29:42),], kmeans, method = "wss") # 4
fviz_nbclust(dlb_matrix[c(29:42),], kmeans, method = "wss") # 5#
k_dlb_block2 = kmeans(dlb_matrix[c(29:42),], centers = 5, nstart = 25)#
fviz_cluster(k_dlb_block2, data = dlb_matrix[c(29:42),]) # all pretty similar except for maybe plot 1
fviz_cluster(k_dlb_block2, data = dlb_matrix[c(15:28),]) # all pretty similar except for maybe plot 1
fviz_cluster(k_dlb_block1, data = dlb_matrix[c(1:14),]) # all pretty similar except for maybe plot 1
dlb_matrix
dist(dlb_matrix[c(1:14),])
dist(dlb_matrix[c(1:14),], method = 'euclidean')
mean(dist(dlb_matrix[c(1:14),], method = 'euclidean'))
?dist
dist(dlb_matrix[c(1:14),], method = 'euclidean', diag = T)
dist(dlb_matrix[c(1:14),], method = 'euclidean', diag = T, upper = T)
rowmeans(dist(dlb_matrix[c(1:14),], method = 'euclidean', diag = T, upper = T))
colMeans(dist(dlb_matrix[c(1:14),], method = 'euclidean', diag = T, upper = T))
colMeans(as.data.frame(dist(dlb_matrix[c(1:14),], method = 'euclidean', diag = T, upper = T)))
as.data.frame(dist(dlb_matrix[c(1:14),], method = 'euclidean', diag = T, upper = T))
class(dist(dlb_matrix[c(1:14),], method = 'euclidean', diag = T, upper = T))
colMeans(as.matrix(dist(dlb_matrix[c(1:14),], method = 'euclidean', diag = T, upper = T)))
distances = colMeans(as.matrix(dist(dlb_matrix, method = 'euclidean', diag = T, upper = T)))
sort(distances)
distances
sort(distances[1:14])
?sort
sort(distances[1:14], decreasing = T)[1:4]
sort(distances[15:28], decreasing = T)[1:4] # plots 1, 6, 11 ,10
sort(distances[29:42], decreasing = T)[1:4] # plots 1, 6, 11 ,10
sort(distances[29:42], decreasing = T)[1:5] # plots 40, 42, 35, 33
sort(distances[1:14], decreasing = T)[1:5] # plots 1, 6, 11 ,10
sort(distances[15:28], decreasing = T)[1:5] # plots 20, 22, 19, 25
sort(distances[29:42], decreasing = T)[1:5] # plots 40, 42, 35, 33
fviz_nbclust(dlb_matrix, kmeans, method = "wss") # 3
k_dlb_block1 = kmeans(dlb_matrix, centers = 4, nstart = 25)
fviz_cluster(k_dlb_block1, data = dlb_matrix) # all pretty similar except for maybe plot 1
fviz_nbclust(dlb_matrix, kmeans, method = "wss") # 4
k_dlb_block1 = kmeans(dlb_matrix, centers = 4, nstart = 25)
fviz_cluster(k_dlb_block, data = dlb_matri) # all pretty similar except for maybe plot 1
k_dlb_block = kmeans(dlb_matrix, centers = 4, nstart = 25)
fviz_cluster(k_dlb_block, data = dlb_matri) # all pretty similar except for maybe plot 1
fviz_cluster(k_dlb_block, data = dlb_matrix) # all pretty similar except for maybe plot 1
k_dlb_block
k_dlb_block$size
distances = colMeans(as.matrix(dist(scale(dlb_matrix), method = 'euclidean', diag = T, upper = T)))
scale(dlb_matrix)
distances = colMeans(as.matrix(dist(scale(dlb_matrix), method = 'euclidean', diag = T, upper = T)))
sort(distances[1:14], decreasing = T)[1:5] # plots 1, 6, 11 ,10
sort(distances[15:28], decreasing = T)[1:5] # plots 20, 22, 19, 25
fviz_nbclust(scale(dlb_matrix), kmeans, method = "wss") # 4
k_dlb_block = kmeans(scale(dlb_matrix), centers = 9, nstart = 25)
fviz_cluster(k_dlb_block, data = scale(dlb_matrix))
sort(distances[15:28], decreasing = T)[1:5] # plots 20, 22, 19, 25
sort(distances[29:42], decreasing = T)[1:5] # plots 40, 42, 35, 33
dlb_matrix[1,]
dlb_matrix[7,]
dlb_matrix[6,]
dlb_matrix[10,]
dlb_matrix[25,]
dlb_matrix[16,]
dlb_matrix[22,]
dlb_matrix[19,]
hist(dlb_matrix[,3])
dlb_matrix[40,]
dlb_matrix[31,]
dlb_matrix[38,]
dlb_matrix[41,]
sort(distances[1:14], decreasing = T)[1:8] # plots 1, 7, 6 ,10
sort(distances[1:14], decreasing = T) # plots 1, 7, 6 ,10
sort(distances[15:28], decreasing = T) # plots 25, 16, 22, 19
sort(distances[29:42], decreasing = T) # plots 40, 31, 38, 41
sort(distances[1:14], decreasing = T) # plots 1, 7, 6 ,10
sort(distances[15:28], decreasing = T) # plots 25, 16, 22, 19
sort(distances[29:42], decreasing = T) # plots 40, 31, 38, 41
plot_types = c('Control', 'N', 'P', 'K', 'NP', 'NK', 'PK', 'NPK')
plot_types_block1 = sample(plot_types)
plot_types_block1
plot_types_block2 = sample(plot_types)#
plot_types_block3 = sample(plot_types)
plot_type_assignment = cbind(seq(1, 42, 1), NA)
plot_type_assignment
plot_type_assignment = as.data.frame(cbind(seq(1, 42, 1), NA), colnames = c('Plot', 'trt'))
plot_types_block1
plot_type_assignment$trt[c(3:5, 8:9, 12:14)] = plot_types_block1
plot_type_assignment$trt
plot_type_assignment$trt[c(3:5, 8:9, 12:15, 17:18, 21, 23:24, 27:30, 33:37, 39)] = c(plot_types_block1, plot_types_block2, plot_types_block3)
plot_type_assignment$trt
plot_type_assignment
plot_type_assignment = as.data.frame(cbind(seq(1, 42, 1), NA), colnames = c('Plot', 'trt'))#
plot_type_assignment$trt[c(3:5, 8:9, 12:15, 17:18, 21, 23:24, 27:30, 33:37, 39)] = c(plot_types_block1, plot_types_block2, plot_types_block3)
plot_types_block1_all = c('NA', 'NA', plot_types_block1[1:3], 'NA', 'NA', plot_types_block1[4:5], plot_types_block1[6:8])
plot_types_block1_all
plot_types_block1_all = c('NA', 'NA', plot_types_block1[1:3], 'NA', 'NA', plot_types_block1[4:5], 'NA', 'NA', plot_types_block1[6:8])
plot_types_block1_all
plot_types_block2_all = c(plot_types_block2[1], 'NA', plot_types_block2[2:3], 'NA', 'NA', plot_types_block2[4], 'NA', plot_types_block2[5:6], 'NA', 'NA', plot_types_block2[7:8]) # remove 16, 19, 20, 22, 25, 26
plot_types_block2_all
plot_types_block3_all = c(plot_types_block3[1:2], 'NA', 'NA', plot_types_block3[3:7], 'NA', plot_types_block3[8], 'NA', 'NA', 'NA') # remove 31, 32, 38, 40, 41, 42
plot_type_assignment = as.data.frame(cbind(seq(1, 42, 1), NA), colnames = c('Plot', 'trt'))
plot_type_assignment$trt = c(plot_types_block1_all, plot_types_block2_all, plot_types_block3_all)
plot_type_assignment
?as.data.frame
plot_type_assignment = as.data.frame(cbind(seq(1, 42, 1), NA))
colnames(plot_type_assignment) = c('Plot', 'trt')
plot_type_assignment$trt = c(plot_types_block1_all, plot_types_block2_all, plot_types_block3_all)
plot_type_assignment
plot_type_assignment$trt
nrow(subset(plot_type_assignment, trt == 'Control'))
nrow(subset(plot_type_assignment, trt == 'N'))
nrow(subset(plot_type_assignment, trt == 'P'))
nrow(subset(plot_type_assignment, trt == 'K'))
nrow(subset(plot_type_assignment, trt == 'NP'))
nrow(subset(plot_type_assignment, trt == 'NK'))
nrow(subset(plot_type_assignment, trt == 'PK'))
nrow(subset(plot_type_assignment, trt == 'NPK'))
write.csv(plot_type_assignment, '../../plot_types/plot_types.csv')
